<?xml version="1.0"?>
<doc>
    <assembly>
        <name>out</name>
    </assembly>
    <members>
        <member name="M:DocRaptor.Api.IDefaultApi.DocsPost(DocRaptor.Model.NewDoc,System.String)">
            <summary>
            Creates a document synchronously.\n
            </summary>
            <param name="doc">blah</param>
            <param name="userCredentials">Your API key.</param>
            <returns>Stream</returns></member>
        <member name="M:DocRaptor.Api.IDefaultApi.DocsPostAsync(DocRaptor.Model.NewDoc,System.String)">
            <summary>
            Creates a document synchronously.\n
            </summary>
            <param name="doc">blah</param>
            <param name="userCredentials">Your API key.</param>
            <returns>Stream</returns></member>
        <member name="T:DocRaptor.Api.DefaultApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary></member>
        <member name="M:DocRaptor.Api.DefaultApi.#ctor(DocRaptor.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Api.DefaultApi" /> class.
            </summary>
            <param name="apiClient"> an instance of ApiClient (optional)</param>
            <returns></returns></member>
        <member name="M:DocRaptor.Api.DefaultApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Api.DefaultApi" /> class.
            </summary>
            <returns></returns></member>
        <member name="M:DocRaptor.Api.DefaultApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <param name="basePath">The base path</param>
            <value>The base path</value></member>
        <member name="M:DocRaptor.Api.DefaultApi.GetBasePath(System.String)">
            <summary>
            Gets the base path of the API client.
            </summary>
            <param name="basePath">The base path</param>
            <value>The base path</value></member>
        <!--FIXME: Invalid documentation markup was found for member P:DocRaptor.Api.DefaultApi.ApiClient-->
        <member name="M:DocRaptor.Api.DefaultApi.DocsPost(DocRaptor.Model.NewDoc,System.String)">
            <summary>
            Creates a document synchronously.\n
            </summary>
            <param name="doc">blah</param>
            <param name="userCredentials">Your API key.</param>
            <returns>Stream</returns></member>
        <member name="M:DocRaptor.Api.DefaultApi.DocsPostAsync(DocRaptor.Model.NewDoc,System.String)">
            <summary>
            Creates a document synchronously.\n
            </summary>
            <param name="doc">blah</param>
            <param name="userCredentials">Your API key.</param>
            <returns>Stream</returns></member>
        <member name="T:DocRaptor.Client.ApiClient">
            <summary>
            API client is mainly responible for making the HTTP call to the API backend.
            </summary></member>
        <member name="M:DocRaptor.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Client.ApiClient" /> class.
            </summary>
            <param name="basePath">The base path.</param></member>
        <member name="P:DocRaptor.Client.ApiClient.BasePath">
            <summary>
            Gets or sets the base path.
            </summary>
            <value>The base path</value></member>
        <member name="P:DocRaptor.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value></member>
        <member name="P:DocRaptor.Client.ApiClient.DefaultHeader">
            <summary>
            Gets the default header.
            </summary></member>
        <member name="M:DocRaptor.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String[])">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="authSettings">Authentication settings.</param>
            <returns>Object</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String[])">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="authSettings">Authentication settings.</param>
            <returns>The Task instance.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns></member>
        <member name="M:DocRaptor.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in ISO8601 format.
            If parameter is a list of string, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.Deserialize(System.String,System.Type,System.Collections.Generic.IList{RestSharp.Parameter})">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="content">HTTP body (e.g. string, JSON).</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an object into JSON string.
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.GetApiKeyWithPrefix(System.String)">
            <summary>
            Get the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.UpdateParamsForAuth(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String[])">
            <summary>
            Update parameters based on authentication.
            </summary>
            <param name="queryParams">Query parameters.</param>
            <param name="headerParams">Header parameters.</param>
            <param name="authSettings">Authentication settings.</param></member>
        <member name="M:DocRaptor.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns></member>
        <member name="M:DocRaptor.Client.ApiClient.ConvertType(System.dynamic,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            Ref: http://stackoverflow.com/questions/4925718/c-dynamic-runtime-cast
            </summary>
            <param name="source">Object to be casted</param>
            <param name="dest">Target type</param>
            <returns>Casted object</returns></member>
        <member name="T:DocRaptor.Client.ApiException">
            <summary>
            API Exception
            </summary></member>
        <member name="P:DocRaptor.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value></member>
        <member name="P:DocRaptor.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value></member>
        <member name="M:DocRaptor.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Client.ApiException" /> class.
            </summary>
            <param name="basePath">The base path.</param></member>
        <member name="M:DocRaptor.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Client.ApiException" /> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param></member>
        <member name="M:DocRaptor.Client.ApiException.#ctor(System.Int32,System.String,System.dynamic)">
            <summary>
            Initializes a new instance of the <see cref="T:DocRaptor.Client.ApiException" /> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param></member>
        <member name="T:DocRaptor.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary></member>
        <member name="F:DocRaptor.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value></member>
        <member name="F:DocRaptor.Client.Configuration.DefaultApiClient">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The API client.</value></member>
        <member name="P:DocRaptor.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value></member>
        <member name="P:DocRaptor.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value></member>
        <member name="F:DocRaptor.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value></member>
        <member name="F:DocRaptor.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value></member>
        <member name="P:DocRaptor.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value></member>
        <member name="M:DocRaptor.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary></member>
        <member name="T:DocRaptor.Model.Doc">
            <summary>
            </summary></member>
        <member name="P:DocRaptor.Model.Doc.Name">
            <summary>
            Gets or Sets Name
            </summary></member>
        <member name="P:DocRaptor.Model.Doc.DocumentType">
            <summary>
            Gets or Sets DocumentType
            </summary></member>
        <member name="P:DocRaptor.Model.Doc.DocumentContent">
            <summary>
            Gets or Sets DocumentContent
            </summary></member>
        <member name="P:DocRaptor.Model.Doc.DocumentUrl">
            <summary>
            Gets or Sets DocumentUrl
            </summary></member>
        <member name="P:DocRaptor.Model.Doc.Test">
            <summary>
            Gets or Sets Test
            </summary></member>
        <member name="M:DocRaptor.Model.Doc.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns></member>
        <member name="M:DocRaptor.Model.Doc.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns></member>
        <member name="T:DocRaptor.Model.NewDoc">
            <summary>
            </summary></member>
        <member name="P:DocRaptor.Model.NewDoc.Doc">
            <summary>
            Gets or Sets Doc
            </summary></member>
        <member name="M:DocRaptor.Model.NewDoc.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns></member>
        <member name="M:DocRaptor.Model.NewDoc.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns></member>
    </members>
</doc>
